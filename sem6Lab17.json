[
  {
    "_id": "5ed7809c44d4c252a4c33c4f",
    "labname": "SYSTEM SOFTWARE AND OPERATING SYSTEM LABORATORY",
    "labcode": "17CSL67 ",
    "descname": "Description",
    "descdata": "Exercises to be prepared with minimum three files (Where ever necessary):\n i.   Header file.\n ii.   Implementation file.\n iii. Application file where main function will be present.\n The idea behind using three files is to differentiate between the developer and user sides. In the developer side, all the three files could be made visible. For the user side only header file and application files could be made visible, which means that the object code of the implementation file could be given to the user along with the interface given in the header file, hiding the source file, if required. Avoid I/O operations (printf/scanf) and use data input file where ever it is possible ",
    "prgmlist": "Lab Experiments: ",
    "prgmlistdata": "1. a) Write a LEX program to recognize valid arithmetic expression. Identifiers in the expression could be only integers and operators could be + and *. Count the identifiers & operators present and print them separately.\n b) Write YACC program to evaluate arithmetic expression involving operators: +, -, *, and / \n\n 2. Develop, Implement and Execute a program using YACC tool to recognize all strings ending with b preceded by na’s using the grammar an b (note: input n value) \n 3. Design, develop and implement YACC/C program to construct Predictive / LL(1) Parsing Table for the grammar rules: A → →→ → aBa , B → →→ → bB | ε εε ε . Use this table to parse the sentence: abba$\n\n 4. Design, develop and implement YACC/C program to demonstrate Shift Reduce Parsing techniquefor the grammar rules: E → →→ → E+T | T, T → →→ → T*F | F, F → →→ → (E) | id and parse the sentence: id + id * id. \n\n 5. Design, develop and implement a C/Java program to generate the machine code using Triples for the statement A = -B * (C +D) whose intermediate code in three-address form: \n\t T1 = -B \n\t T2 = C + D \n\t T3 = T1 + T2 \n\t A = T3\n\n 6. a) Write a LEX program to eliminate comment lines in a C program and copy the resulting program into a separate file. \n b) Write YACC program to recognize valid identifier, operators and keywords in the given text (C program) file .\n\n 7. Design, develop and implement a C/C++/Java program to simulate the working of Shortest remaining time and Round Robin (RR) scheduling algorithms. Experiment with different quantum sizes for RR algorithm.\n\n 8. Design, develop and implement a C/C++/Java program to implement Banker’s algorithm. Assume suitable input required to demonstrate the results.\n\n 9. Design, develop and implement a C/C++/Java program to implement page replacement algorithms LRU and FIFO. Assume suitable input required to demonstrate the results",
    "labname1": "COMPUTER GRAPHICS LABORATORY WITH MINI PROJECT",
    "labcode1": "17CSL68  ",
    "descname1a": "Description (If any):",
    "prgmlist1a": "PART A\n Design, develop, and implement the following programs using OpenGL API ",
    "prgmlistdata1a": "1. Implement Brenham’s line drawing algorithm for all types of slope. \n\n 2. Create and rotate a triangle about the origin and a fixed point.\n\n 3. Draw a colour cube and spin it using OpenGL transformation matrices. \n\n  4. Draw a color cube and allow the user to move the camera suitably to experiment with perspective viewing. \n\n 5. Clip a lines using Cohen-Sutherland algorithm \n\n 6. To draw a simple shaded scene consisting of a tea pot on a table. Define suitably the position and properties of the light source along with the properties of the surfaces of the solid object used in the scene. \n\n  7. Design, develop and implement recursively subdivide a tetrahedron to form 3D sierpinski gasket. The number of recursive steps is to be specified by the user.\n\n 8. Develop a menu driven program to animate a flag using Bezier Curve algorithm \n\n 9. Develop a menu driven program to fill the polygon using scan line algorithm ",
    "prgmlist1b": "PART –B  ( MINI-PROJECT) : ",
    "prgmlistdata1b": "Student should develop mini project on the topics mentioned below or similar applications using Open GL API.\n Consider all types of attributes like color, thickness, styles, font, background, speed etc., while doing mini project.\n  (During the practical exam: the students should demonstrate and answer Viva-Voce)\n Sample Topics: Simulation of concepts of OS, Data structures, algorithms etc."
  }
]
